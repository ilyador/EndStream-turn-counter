var endStreamCounter=angular.module("endStreamCounter",[]);endStreamCounter.constant("game",{playerNames:{p1:"player1",p2:"player2"},actions:6,scoreToWin:10,streamStructure:[{epoch:"2300",countingAgent:false,turns:1,cards:10,score:1},{epoch:"2200",countingAgent:false,turns:2,cards:5,score:2},{epoch:"2100",countingAgent:false,turns:3,cards:4,score:3},{epoch:"2000",countingAgent:false,turns:4,cards:3,score:4},{epoch:"1900",countingAgent:false,turns:5,cards:2,score:6},{epoch:"1800",countingAgent:false,turns:10,cards:1,score:12}]});endStreamCounter.controller("boardController",["$scope","game",function(d,c){function f(){var h={players:{},currentPlayer:c.playerNames.p1,actions:b(),defensiveActions:[]};h.players[c.playerNames.p1]={stream:_.merge({},c.streamStructure),name:c.playerNames.p1,score:0};h.players[c.playerNames.p2]={stream:_.merge({},c.streamStructure),name:c.playerNames.p2,score:0};return h}function a(h,i){return function(j,k){if(j.countingAgent===i){if(j.turns>1){j.turns-=1}else{if(j.turns===1){j.turns=(j.countingAgent===h)?"Spin":"Disintegrate or spin"}else{j.turns=c.streamStructure[k].turns}}}}}function g(h){return(h===c.playerNames.p1)?c.playerNames.p2:c.playerNames.p1}function b(){return Array.apply(null,Array(c.actions)).map(function(){return false})}function e(h){return _.reject(h,function(i){return i})}if(localStorage.board){d.board=JSON.parse(localStorage.board)}else{d.board=f()}d.board.nextPlayer=g(d.board.currentPlayer);d.changeAction=false;d.agentCounting=function(j,i){var h=d.board.players[i].stream[j];if(!h.countingAgent){h.countingAgent=d.board.currentPlayer}else{d.changeAction="agent";d.otherPlayerButton=g(h.countingAgent);d.changeAgent=function(){h.countingAgent=g(h.countingAgent);d.changeAction=false};d.removeAgent=function(){h.countingAgent=false;h.turns=c.streamStructure[j].turns;d.changeAction=false}}};d.closeChangeAction=function(){d.changeAction=false};d.isString=function(h){return _.isString(h)};d.disintegrate=function(j,k,i){var h=d.board.players[i].stream[j];if(k!==i&&_.isString(h.turns)){d.board.players[k].score+=c.streamStructure[j].score;h.turns=c.streamStructure[j].turns}else{if(h.turns>=1){d.changeAction="turns";d.turnCounter=h.turns;d.turns={add:function(){if(h.turns>=10){return}else{h.turns+=1}d.turnCounter=h.turns},reduce:function(){if(h.turns<=0){return}else{h.turns-=1}d.turnCounter=h.turns},reset:function(){h.turns=c.streamStructure[j].score;d.changeAction=false},close:function(){if(h.turns===0){if(k===i){h.turns="Spin"}else{h.turns="Disintegrate or spin"}}d.changeAction=false}}}}};d.actionToggle=function(h){if(!d.board.actions[h]){h+=1}d.board.actions=b();for(var j=0;j<h;j++){d.board.actions[j]=true}};d.endTurn=function(){var i=a(c.playerNames.p1,d.board.nextPlayer);var h=a(c.playerNames.p2,d.board.nextPlayer);_.forOwn(d.board.players[c.playerNames.p1].stream,i);_.forOwn(d.board.players[c.playerNames.p2].stream,h);d.board.nextPlayer=d.board.currentPlayer;d.board.currentPlayer=g(d.board.currentPlayer);d.board.defensiveActions=e(d.board.actions);d.board.actions=b()};d.newGame=function(){localStorage.removeItem("board");d.board=f()};d.saveBoard=function(h){if(angular.element(h.target).hasClass("new-game")){return}localStorage.board=JSON.stringify(d.board)}}]);